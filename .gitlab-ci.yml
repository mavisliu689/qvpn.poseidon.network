stages:
  - build

image: docker:19.03.1

services:
  - docker:19.03.1-dind

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""


.before_script_template:
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - export VERSION=`cat VERSION.txt`

build-arm:
  stage: build
  tags:
    - arm
  extends: .before_script_template
  script:
    - echo $CI_REGISTRY_ARM_IMAGE
    - docker pull $CI_REGISTRY_ARM_IMAGE:latest || true
    - wget https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-arm64
    - mkdir -p  ~/.docker/cli-plugins/
    - mv buildx-v0.3.1.linux-arm64 ~/.docker/cli-plugins/docker-buildx
    - chmod a+x ~/.docker/cli-plugins/docker-buildx
    - export DOCKER_CLI_EXPERIMENTAL=enabled
    - docker buildx create --driver-opt network=host
    - docker buildx create --name newbuilder
    - docker buildx use newbuilder
    - docker buildx inspect --bootstrap
    - docker buildx ls
    - docker buildx build --platform linux/arm64,linux/arm/v7 --cache-from $CI_REGISTRY_ARM_IMAGE:latest --tag $CI_REGISTRY_ARM_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_ARM_IMAGE:latest --tag $CI_REGISTRY_ARM_IMAGE:$VERSION --push .
  only:
    - master

build-x86:
  stage: build
  tags:
    - x86
  extends: .before_script_template
  script:
    - echo $CI_REGISTRY_X86_IMAGE
    - docker pull $CI_REGISTRY_X86_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_X86_IMAGE:latest --tag $CI_REGISTRY_X86_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_X86_IMAGE:latest .
    - docker tag $CI_REGISTRY_X86_IMAGE:latest $CI_REGISTRY_X86_IMAGE:$VERSION
    - docker push $CI_REGISTRY_X86_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_X86_IMAGE:latest
    - docker push $CI_REGISTRY_X86_IMAGE:$VERSION
  only:
    - master
